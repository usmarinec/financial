<?xml version="1.0"?>

<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

 

<module name = "Checker">

  <property name="charset" value="UTF-8"/>

 

  <property name="severity" value="warning"/>

 

  <property name="fileExtensions" value="java, properties, xml"/>

  <!-- Checks for whitespace                               -->

  <!-- See http://checkstyle.sf.net/config_whitespace.html -->

  <module name="FileTabCharacter">

    <property name="eachLine" value="true"/>

  </module>

 

  <module name="SuppressionFilter">

    <property name="file" value="${config_loc}/suppressions.xml"/>

  </module>

  <!-- couple modules to enable @SuppressWarnings("checkstyle:violation") -->

  <module name="SuppressWarningsFilter"/>

 

  <module name="TreeWalker">

    <module name="SuppressWarningsHolder"/>

    <module name="OuterTypeFilename"/>

    <module name="IllegalTokenText">

      <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>

      <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>

      <property name="message" value="Avoid using corresponding octal or Unicode escape."/>

    </module>

    <module name="AvoidEscapedUnicodeCharacters">

      <property name="allowEscapesForControlCharacters" value="true"/>

      <property name="allowByTailComment" value="true"/>

      <property name="allowNonPrintableEscapes" value="true"/>

    </module>

    <module name="AvoidStarImport">

      <property name="allowStaticMemberImports" value="true" />

    </module>

    <module name="OneTopLevelClass"/>

    <module name="NoLineWrap"/>

    <module name="EmptyBlock">

      <property name="option" value="TEXT"/>

      <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>

    </module>

    <module name="NeedBraces"/>

    <module name="OneStatementPerLine"/>

    <module name="MultipleVariableDeclarations"/>

    <module name="ArrayTypeStyle"/>

    <module name="MissingSwitchDefault"/>

    <module name="FallThrough"/>

    <module name="UpperEll"/>

    <module name="ModifierOrder"/>

    <module name="PackageName">

      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>

      <message key="name.invalidPattern"

        value="Package name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="TypeName">

      <message key="name.invalidPattern"

        value="Type name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="MemberName">

      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>

      <message key="name.invalidPattern"

        value="Member name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="ParameterName">

      <property name="id" value="ParameterNameNonPublic"/>

      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>

      <message key="name.invalidPattern"

        value="Parameter name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="LambdaParameterName">

      <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>

      <message key="name.invalidPattern"

        value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="CatchParameterName">

      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>

      <message key="name.invalidPattern"

        value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="ConstantName">

      <property name="format" value="[A-Z][A-Z0-9]([_A-Z0-9]+)$"/>

      <message key="name.invalidPattern"

        value="Constant (static, final) variable name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="LocalVariableName">

      <property name="tokens" value="VARIABLE_DEF"/>

      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>

      <property name="allowOneCharVarInForLoop" value="true"/>

      <message key="name.invalidPattern"

        value="Local variable name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="ClassTypeParameterName">

      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>

      <message key="name.invalidPattern"

        value="Class type name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="MethodTypeParameterName">

      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>

      <message key="name.invalidPattern"

        value="Method type name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="InterfaceTypeParameterName">

      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>

      <message key="name.invalidPattern"

        value="Interface type name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="NoFinalizer"/>

    <module name="GenericWhitespace">

      <message key="ws.followed"

        value="GenericWhitespace ''{0}'' is followed by whitespace."/>

      <message key="ws.preceded"

        value="GenericWhitespace ''{0}'' is preceded with whitespace."/>

      <message key="ws.illegalFollow"

        value="GenericWhitespace ''{0}'' should followed by whitespace."/>

      <message key="ws.notPreceded"

        value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>

    </module>

    <module name="AbbreviationAsWordInName">

      <property name="ignoreFinal" value="true"/>

      <property name="allowedAbbreviationLength" value="1"/>

    </module>

    <module name="OverloadMethodsDeclarationOrder"/>

    <module name="VariableDeclarationUsageDistance"/>

    <module name="OperatorWrap">

      <property name="option" value="NL"/>

      <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>

    </module>

    <module name="AnnotationLocation">

      <property name="id" value="AnnotationLocationMostCases"/>

      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>

    </module>

    <module name="AnnotationLocation">

      <property name="id" value="AnnotationLocationVariables"/>

      <property name="tokens" value="VARIABLE_DEF"/>

      <property name="allowSamelineMultipleAnnotations" value="true"/>

    </module>

    <module name="NonEmptyAtclauseDescription"/>

    <module name="SummaryJavadoc">

      <property name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>

    </module>

    <module name="JavadocMethod">

      <property name="accessModifiers" value="public"/>

      <property name="allowMissingParamTags" value="true"/>

      <property name="validateThrows" value="false"/>

      <property name="allowMissingReturnTag" value="true"/>

      <property name="allowedAnnotations" value="Override, Test, ParameterizedTest"/>

    </module>

    <module name="MissingJavadocMethod">

      <property name="scope" value="public"/>

      <property name="minLineCount" value="2"/>

      <property name="allowedAnnotations" value="Override, Test, ParameterizedTest"/>

      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF,

                                   COMPACT_CTOR_DEF"/>

    </module>

    <module name="MethodName">

      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>

      <message key="name.invalidPattern"

        value="Method name ''{0}'' must match pattern ''{1}''."/>

    </module>

    <module name="EmptyCatchBlock">

      <property name="exceptionVariableName" value="expected"/>

    </module>

  </module>

</module>

